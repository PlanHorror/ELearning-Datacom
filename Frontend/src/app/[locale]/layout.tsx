import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../../shared/styles/globals.scss";
import Header from "@/shared/components/header/header.component";
import Footer from "@/shared/components/footer/footer.component";
import { SessionProvider } from "next-auth/react";
import { AntdRegistry } from "@ant-design/nextjs-registry";
import { Toaster } from "sonner";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { routing } from "@/i18n/routing";
import { getMessages } from "next-intl/server";
import { notFound } from "next/navigation";
import { Suspense } from "react";
import { LoadingComponent } from "@/shared/components/loading/loading.component";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const messages = await getMessages();

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SessionProvider>
          <NextIntlClientProvider locale={locale} messages={messages}>
            <AntdRegistry>
              <Header />
              <Suspense fallback={<LoadingComponent />}>
                <main className="main-content">
                  {children}
                </main>
              </Suspense>
              <Toaster position="top-right" expand={false} richColors />
              <Footer />
            </AntdRegistry>
          </NextIntlClientProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
